{"version":3,"sources":["hashState.ts","Timer.tsx","funFacts.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["setKeyOnHash","key","newValue","queryMap","querystring","parse","window","location","hash","substring","JSON","stringify","path","protocol","host","pathname","search","history","replaceState","document","title","useHashState","initialValue","queryValue","queryRawValue","getKeyFromHash","useState","value","setValue","useCallback","v","Timer","duration","running","showMs","funFacts","resetRef","onClick","onRatioChanged","remainingTime","setRemainingTime","addMilliseconds","Date","targetDate","setTargetDate","funFactCandidates","setFunFactCandidates","discreteSeconds","Math","ceil","useEffect","min","max","candidates","filter","f","requestRef","useRef","ratio","remainingMs","current","animate","now","differenceInMilliseconds","requestAnimationFrame","cancelAnimationFrame","updateWhenStartsRunning","formatedTime","ms","seconds","floor","minutes","remainingSeconds","hours","remainingMinutes","hoursString","minutesString","padStart","secondsString","formatMs","Container","percentage","RemainingTimeContainer","RemainingTime","fact","styled","div","attrs","props","style","transform","fontSize","length","sin","PI","p","themes","App","setDuration","setShowMs","showFunFacts","setShowFunFacts","keepControlStrip","setKeepControlStrip","theme","setRunning","setRatio","editingValue","setEditingValue","funFactsRef","originalArray","temporaryValue","randomIndex","array","currentIndex","random","shuffled","resetTimer","newDuration","toggleTimer","editDuration","openEditor","listener","e","code","preventDefault","addEventListener","removeEventListener","controlStripVisible","Background","r","ControlStrip","visible","onSubmit","Button","Label","htmlFor","type","id","checked","onChange","target","DurationEditor","text","setText","inputParts","split","map","s","trim","parseInt","autoFocus","nav","button","label","backgroundImage","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.93f3676e.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\"\nimport querystring from 'querystring'\n\nfunction getKeyFromHash<T>(key: string): T {\n  const hash = window.location.hash.substring(1)\n  const queryMap = querystring.parse(hash)\n  const queryRawValue = queryMap[key]\n  const queryValue: T = typeof queryRawValue === 'string' ? JSON.parse(queryRawValue) : JSON.parse(queryRawValue?.[0] ?? null) // TODO: revisit\n  return queryValue\n}\n\nfunction setKeyOnHash<T>(key: string, newValue: T) {\n  const queryMap = querystring.parse(window.location.hash.substring(1))\n  queryMap[key] = JSON.stringify(newValue)\n  const path = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.search + '#' + querystring.stringify(queryMap)\n  window.history.replaceState({}, document.title, path)\n}\n\ntype SetT<T> = ((newValue: T) => T) | T\n\nfunction useHashState<T>(key: string, initialValue: T): [T, (newValue: SetT<T>) => void] {\n  const queryValue = getKeyFromHash<T>(key)\n  const [value, setValue] = useState(queryValue ?? initialValue)\n\n  const cb = useCallback((newValue: SetT<T>) => {\n    if (typeof newValue === 'function') {\n      setValue(newValue)\n      setValue(v => {\n        setKeyOnHash(key, v)\n        return v\n      })\n    } else {\n      setValue(newValue)\n      setKeyOnHash(key, newValue)\n    }\n\n  }, [key])\n\n  return [value, cb]\n}\n\nexport default useHashState\n","import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { FunFact } from './funFacts'\nimport { addMilliseconds, differenceInMilliseconds } from 'date-fns'\n\n\ninterface TimerProps {\n  duration: number\n  running: boolean\n  showMs: boolean\n  funFacts?: FunFact[]\n  resetRef?: React.MutableRefObject<(() => void) | undefined>\n  onClick?: () => void\n  onRatioChanged?: (ratio: number) => void\n}\n\nconst Timer: React.FC<TimerProps> = ({\n  duration,\n  running,\n  showMs,\n  funFacts,\n  resetRef,\n  onClick,\n  onRatioChanged\n}) => {\n  const [remainingTime, setRemainingTime] = useState(duration * 1000)\n  const [targetDate, setTargetDate] = useState<Date>(addMilliseconds(new Date(), remainingTime))\n  const [funFactCandidates, setFunFactCandidates] = useState<FunFact[]>([])\n\n  const discreteSeconds = Math.ceil(remainingTime / 1000)\n\n  useEffect(() => {\n    if (funFacts) {\n      const min = discreteSeconds * 0.8\n      const max = discreteSeconds * 1.2\n      const candidates = funFacts.filter(f => f.duration <= max && f.duration >= min)\n\n      setFunFactCandidates(candidates)\n    }\n  }, [funFacts, discreteSeconds])\n\n  const requestRef = useRef(-1)\n\n  const ratio = 1 - remainingTime / (duration * 1000)\n  const remainingMs = remainingTime % 1000\n\n  useEffect(() => {\n    onRatioChanged?.(ratio)\n  }, [onRatioChanged, ratio])\n\n  useEffect(() => {\n    if (resetRef) {\n      resetRef.current = () => {\n        setRemainingTime((duration) * 1000)\n      }\n    }\n  }, [duration, setRemainingTime, resetRef])\n\n  const animate = useCallback(() => {\n    if (running) {\n      const now = new Date()\n      setRemainingTime(Math.max(differenceInMilliseconds(targetDate, now), 0))\n      if (remainingTime > 0) {\n        requestRef.current = requestAnimationFrame(animate)\n      }\n    }\n  }, [running, remainingTime, targetDate])\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate)\n    return () => cancelAnimationFrame(requestRef.current)\n  }, [running, animate])\n\n  const updateWhenStartsRunning = useCallback(() => {\n    setTargetDate(addMilliseconds(new Date(), remainingTime))\n  }, [remainingTime])\n\n  useEffect(() => {\n    if (running) {\n      updateWhenStartsRunning()\n    }\n  }, [running, updateWhenStartsRunning])\n\n  useEffect(() => {\n    setRemainingTime((duration) * 1000)\n  }, [duration])\n\n  const formatedTime = formatMs(showMs ? remainingTime : discreteSeconds * 1000)\n\n  return (\n    <Container percentage={ratio * 100}>\n      <RemainingTimeContainer remainingTime={remainingTime} onClick={onClick}>\n        <RemainingTime remainingTime={remainingTime} formatedTime={formatedTime}>\n          <strong>{formatedTime}</strong>\n          {showMs && <small>.{`${remainingMs}`.padStart(3, '0')}</small>}\n        </RemainingTime>\n      </RemainingTimeContainer>\n      {funFactCandidates[0] && <p>About as much time as {funFactCandidates[0].fact}.</p>}\n    </Container>\n  )\n}\n\nexport default Timer\n\ninterface ContainerProps {\n  percentage: number\n}\n\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  /* height: 100%; */\n  line-height: 1;\n`\n\ninterface RemaingTimeProps {\n  remainingTime: number\n  formatedTime: string\n}\n\nconst RemainingTime = styled.div.attrs<RemaingTimeProps>(props => {\n  const seconds = props.remainingTime / 1000\n  const discreteSeconds = Math.ceil(seconds)\n\n  return {\n    style: {\n      transform: `scale(${discreteSeconds % 2 ? 1.3 : 1})`,\n      fontSize: `min(${100 / Math.max(props.formatedTime.length, 3)}vw, 90vh)`\n    }\n  }\n}) <RemaingTimeProps>`\n  font-variant-numeric: tabular-nums;\n  color: var(--color-text);\n  transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.475);\n\n  small {\n    font-size: 20%;\n  }\n`\n\ninterface RemainingTimeContainerProps {\n  remainingTime: number\n  onClick?: () => void\n}\n\n// Safari is having a hard time deatling with transitions on rotate\nconst RemainingTimeContainer = styled.div.attrs<RemainingTimeContainerProps>(props => {\n  const seconds = props.remainingTime / 1000\n\n  return {\n    style: {\n      transform: `rotate(${Math.sin(seconds / 5 * Math.PI) * 2.5}deg)`\n    }\n  }\n}) <RemainingTimeContainerProps>`\n  cursor: ${p => p.onClick ? 'pointer' : 'auto'};\n`\n\nfunction formatMs(ms: number): string {\n  const seconds = Math.floor(ms / 1000)\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = seconds % 60\n\n  const hours = Math.floor(minutes / 60)\n  const remainingMinutes = minutes % 60\n\n  const hoursString = hours > 0 ? `${hours}:` : ''\n  const minutesString = hours > 0 || remainingMinutes > 0 ? `${hours > 0 ? `${remainingMinutes}`.padStart(2, '0') : remainingMinutes}:` : ''\n  const secondsString = `${remainingSeconds}`.padStart(remainingSeconds > 9 || minutes === 0 ? 1 : 2, '0')\n\n  return `${hoursString}${minutesString}${secondsString}`\n}\n","export interface FunFact {\n  fact: string\n  duration: number\n}\n\nconst funFacts: FunFact[] = []\n\nexport function shuffled<T>(originalArray: T[]): T[] {\n  const array = [...originalArray]\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\n\nexport default funFacts\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport useHashState from './hashState'\nimport Timer from './Timer'\nimport funFacts, { shuffled } from './funFacts'\nimport styled from 'styled-components'\n\nconst themes = [\n  ['#ff6e7f', '#bfe9ff', '#030303'],\n  ['#fc6767', '#ec008c', '#f3f3f3'],\n  ['#373B44', '#4286f4', '#f3f3f3'],\n]\n\nconst App: React.FC = () => {\n  const [duration, setDuration] = useHashState('d', 60)\n  const [showMs, setShowMs] = useHashState('ms', true)\n  const [showFunFacts, setShowFunFacts] = useHashState('ff', false)\n  const [keepControlStrip, setKeepControlStrip] = useHashState('cs', false)\n  const [theme] = useHashState('theme', 0)\n  const [running, setRunning] = useState(false)\n  const [ratio, setRatio] = useState(0)\n  const [editingValue, setEditingValue] = useState(false)\n  const funFactsRef = useRef(shuffled(funFacts))\n\n  const resetRef = useRef<() => void>()\n\n  const resetTimer = useCallback((newDuration?: number) => {\n    setRunning(false)\n    if (newDuration) {\n      setDuration(newDuration)\n    }\n    resetRef.current?.()\n  }, [setDuration])\n\n  const toggleTimer = useCallback(() => {\n    if (ratio === 1) {\n      resetTimer()\n    }\n    setRunning(v => !v)\n  }, [setRunning, resetTimer, ratio])\n\n  const editDuration = useCallback((ms: number) => {\n    if (ms > 0) {\n      resetTimer(ms)\n    }\n    setEditingValue(false)\n  }, [resetTimer, setEditingValue])\n\n  const openEditor = useCallback(() => {\n    setEditingValue(v => !v)\n  }, [setEditingValue])\n\n  useEffect(() => {\n    const listener = (e: KeyboardEvent) => {\n      if (e.code === 'KeyR') {\n        e.preventDefault()\n        resetTimer()\n      } if (e.code === 'KeyE') {\n        e.preventDefault()\n        openEditor()\n      } else if (e.code === 'KeyM') {\n        e.preventDefault()\n        setShowMs(v => !v)\n        // }\n        // else if (e.code === 'KeyF') {\n        // e.preventDefault()\n        // setShowFunFacts(v => !v)\n      } else if (e.code === 'Space') {\n        e.preventDefault()\n        toggleTimer()\n      }\n    }\n    document.addEventListener('keypress', listener)\n\n    return () => document.removeEventListener('keypress', listener)\n  }, [resetTimer, toggleTimer, setShowMs, setShowFunFacts, openEditor])\n\n  useEffect(() => {\n    if (ratio === 1) {\n      setRunning(false)\n    }\n  }, [ratio])\n\n  const controlStripVisible = keepControlStrip || !running\n\n  return (\n    <Background ratio={ratio} theme={themes[theme]}>\n      <Container controlStripVisible={controlStripVisible}>\n        <header></header>\n        <Timer\n          duration={duration}\n          running={running}\n          showMs={showMs}\n          funFacts={showFunFacts ? funFactsRef.current : []}\n          resetRef={resetRef}\n          onClick={toggleTimer}\n          onRatioChanged={r => setRatio(r)}\n        />\n        <ControlStrip visible={controlStripVisible}>\n          {editingValue\n            ? <DurationEditor onSubmit={editDuration} />\n            : <>\n              <Button onClick={toggleTimer}>\n                {running ? 'Stop timer' : 'Start timer'}\n              </Button>\n              <Button onClick={openEditor}>Change duration</Button>\n              <Button onClick={() => resetTimer()}>Reset timer</Button>\n              <Label htmlFor=\"showMs\">\n                <input type=\"checkbox\" id=\"showMs\" checked={showMs} onChange={(e) => setShowMs(e.target.checked)} /> Show milliseconds\n              </Label>\n              {/* <Label htmlFor=\"showFunFacts\">\n                <input type=\"checkbox\" id=\"showFunFacts\" checked={showFunFacts} onChange={(e) => setShowFunFacts(e.target.checked)} /> Show fun facts about the remaining time\n              </Label> */}\n              <Label htmlFor=\"keepControlStrip\">\n                <input type=\"checkbox\" id=\"keepControlStrip\" checked={keepControlStrip} onChange={(e) => setKeepControlStrip(e.target.checked)} /> Keep these controls always visible\n               </Label>\n            </>\n          }\n\n        </ControlStrip>\n      </Container>\n    </Background>\n  )\n}\n\nexport default App\n\ninterface DurationEditorProps {\n  onSubmit: (ms: number) => void\n}\n\nconst DurationEditor: React.FC<DurationEditorProps> = ({ onSubmit }) => {\n  const [text, setText] = useState('')\n\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault()\n\n      const inputParts = text.split(':').map(s => s.trim())\n      const seconds = inputParts?.[inputParts.length - 1]\n      const minutes = inputParts?.[inputParts.length - 2]\n      const hours = inputParts?.[inputParts.length - 3]\n\n      const ms = parseInt(seconds ?? '0') + parseInt(minutes ?? '0') * 60 + parseInt(hours ?? '0') * 3600\n\n      onSubmit(ms)\n    }}>\n      <Label htmlFor=\"timerDuration\">\n        Timer duration: {' '}\n        <input id=\"timerDuration\" type=\"text\" autoFocus value={text} onChange={e => setText(e.target.value)} /><br />\n        (number of seconds, or MM:SS, or HH:MM:SS)\n      </Label>\n    </form>\n  )\n}\n\ninterface ContainerProps {\n  controlStripVisible: boolean\n}\n\nconst Container = styled.div<ContainerProps>`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\ninterface ControlStripProps {\n  visible: boolean\n}\n\nconst ControlStrip = styled.nav<ControlStripProps>`\n  max-height: ${p => p.visible ? '50%' : 0};\n  opacity: ${p => p.visible ? 1 : 0};\n  overflow-y: hidden;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  backdrop-filter: blur(10px);\n  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.475);\n  font-size: 0.9em;\n  text-align: center;\n`\n\nconst Button = styled.button`\n  border: 0;\n  margin: 0.25em;\n  padding: 0.5em 1em;\n  font-size: 1em;\n  background: white;\n  color: black; \n  cursor: pointer;\n\n  &:hover {\n    background: black;\n    color: white;\n  }\n`\n\nconst Label = styled.label`\n  display: block;\n  margin: 0.25em;\n`\n\ninterface BackgroundProps {\n  ratio: number\n  theme: string[]\n}\n\nconst Background = styled.div.attrs<BackgroundProps>(props => ({\n  style: {\n    backgroundImage: `radial-gradient(circle at bottom left,  var(--color-1), ${Math.min((props.ratio * 100) + 0.03, 100)}%, var(--color-2))`\n  }\n})) <BackgroundProps>`\n  --color-1: ${p => p.theme[0]};\n  --color-2: ${p => p.theme[1]};\n  --color-text: ${p => p.theme[2]};\n  height: 100%;\n  overflow-y: auto;\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}